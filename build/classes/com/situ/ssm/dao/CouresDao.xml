<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.situ.ssm.dao.CouresDao">
	  	<select id="findAll" resultType="Coures">
	  		SELECT id,NAME,grade FROM coures;
	  	</select>
	  	<select id="findById" parameterType="int" resultType="Coures">
	  		select id,name,grade from coures where id = #{id};
	  	</select>
	  	<resultMap type="Coures" id="CouresMap">
	  		<id column="id" property="id"/>
	  		<result column="name" property="name"/>
	  		<result column="grade" property="grade"/>
	  		<collection property="banjiList" ofType="Banji">
	  			<id column="banji_id" property="id"/>
	  			<result column="banji_name" property="name"/>
	  		</collection>
	  	</resultMap>
	  	<select id="pageList" parameterType="SearchCondition" resultMap="CouresMap">
	  		SELECT coures.id,coures.name,grade,banji.id as banji_id,banji.name as banji_name 
			FROM coures LEFT JOIN banji_coures ON coures.id=banji_coures.coure_id
			LEFT JOIN banji ON banji_coures.banji_id = banji.id 
			<where>
				<if test="coures != null and coures.name != null and !&quot;&quot;.equals(coures.name.trim())">
					and coures.name like '%${coures.name}%'
				</if>			
				<if test="coures != null and coures.grade != null">
					and grade = #{coures.grade}
				</if>
			</where>
			LIMIT #{pageIndex},#{pageSize}; 
	  	</select>
	  	
	  	<select id="getCount" parameterType="SearchCondition" resultType="int">
	  		SELECT count(*)
			FROM coures LEFT JOIN banji_coures ON coures.id=banji_coures.coure_id
			LEFT JOIN banji ON banji_coures.banji_id = banji.id 
			<where>
				<if test="coures != null and coures.name != null and !&quot;&quot;.equals(coures.name.trim())">
					and coures.name like '%${coures.name}%'
				</if>			
				<if test="coures != null and coures.grade != null">
					and grade = #{coures.grade};
				</if>
			</where>
	  	</select>
	  	
	  	<update id="updateCoures" parameterType="Coures">
	  		update coures 
	  		<set>
	  			<if test="name != null and !&quot;&quot;.equlas(name.trim())">
	  				name = #{name},
	  			</if>
	  			<if test="grade != null">
	  				grade = #{grade},
	  			</if>
	  		</set>
	  		where id = #{id};
	  	</update>
	  	
	  	<insert id="addCoures" parameterType="Coures">
	  		insert into coures(name,grade) values(#{name},#{grade});
	  	</insert>
	  	
	  	<delete id="deleteCoures" parameterType="int">
	  		delete from coures where id = #{id};
	  	</delete>
	  	
	  	<delete id="deleteBanjiCoures" parameterType="int">
	  		delete from banji_coures where coure_id = #{id};
	  	</delete>
  </mapper>